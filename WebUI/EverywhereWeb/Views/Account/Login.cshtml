@using EverywhereWeb.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<header>
    <nav class="navbar navbar-main navbar-fixed-top" role="navigation" data-spy="affix" data-offset-top="60" data-offset-bottom="200">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse-main">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar top-bar"></span>
                    <span class="icon-bar middle-bar"></span>
                    <span class="icon-bar bottom-bar"></span>
                </button>
                <a class="navbar-brand" href="#"><img src="../images/everywhere_logo.png"> <span class="sr-only"> Everywhere </span></a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse navbar-collapse-main">
                <ul class="nav navbar-nav navbar-center">
                    <li><a href="#">Home</a></li>
                    <li><a href="#">How it Works</a></li>
                    <li><a href="#">Contact</a></li>
                </ul>

                <div class="navbar-right">
                    <p class="navbar-text">Don't have an Account?</p> <button type="button" class="btn navbar-btn" onclick="@("window.location.href='" + @Url.Action("Register", "Account") + "'");" >Get Started</button>
                </div>
            </div>
            <!-- /.navbar-collapse -->
        </div>
    </nav>
</header>
<section class="bg-photo bg-photo-4">
    <div class="bg-opac-dark page-content">
        <div class="container body-content">
            <div class="container">
                <div class="row">

                    <div class="col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2">

                        <div class="well well-lg well-white row">

                            @*<form action="POST" method="POST" role="form" class="col-sm-10 col-sm-offset-1 form-group-lg">*@
                            @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { role = "form", @class = "col-sm-10 col-sm-offset-1 form-group-lg", id = "rForm", @onsubmit = "callLoginAPI(event)" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-head">
                                    <h2>Login to your account</h2>
                                    <p>Enter your details below.</p>
                                </div>
                                <div id="validSummary" hidden>
                                    <div class="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                        <strong><img src="../images/icon-warning.png"></strong> <span class="text-danger">Something went wrong! email or password is not valid.</span>
                                    </div>
                                </div>

                                if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                                {
                                    <div class="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                        <strong><img src="../images/icon-warning.png"></strong> <span class="text-danger">Something went wrong! email or password is not valid.</span>
                                    </div>
                                }

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "john.s@company.co", id = "uEmail" })
                                    @*<label for="uEmail">Email</label>
                                        <input type="Email" class="form-control" id="uEmail" placeholder="john.s@company.co">*@
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "6+ characters", id = "uPass", type = "password" })
                                    @*<label for="uPass">Password</label>
                                        <input type="password" class="form-control" id="uPass" placeholder="6+ characters">*@
                                    <p>
                                        <a href="@Url.Action("ForgotPassword", "Account")"><small class="text-muted">Forgot Password?</small></a>
                                    </p>
                                </div>


                                <button type="submit" id="btnSignIn" class="btn btn-success cta btn-lg">Login</button>
                                @*</form>*@
                            }
                            @Html.Hidden("RedirectTo", Url.Action("Dashboard", "Home"));
                        </div>

                    </div>
                </div>
            </div>
            <hr />
        </div>
    </div>
</section>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    function callLoginAPI(e) {
        
        //$('#btnSignIn').click(function (e) {
            var email = $('#uEmail').val();
            var password = $('#uPass').val();
            var key = 'APP_REGISTER_KEY';
            var uuid = '00001310-0000-0000-1012-000000000000';
            $.ajax({
                url: "http://ws.everywhere.live:8080/api/v1/authenticate/",
                type: "POST",
                crossDomain: true,
                data: JSON.stringify({ 'email':email, 'Password': password, 'key': key, 'uuid': uuid }),
                dataType: "json",
                async: false,
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    e.preventDefault();
                    sessionStorage.setItem('loginToken', data.token);
                    sessionStorage.setItem('userName', data.name);
                    var url = $("#RedirectTo").val();
                    window.location.href = url;

                },
                error: function (jqXhr, textStatus, errorThrown) {
                    e.preventDefault();
                    if (jqXhr.statusText == "Created") {
                        var url = $("#RedirectTo").val();
                        location.href = url;
                    }
                    else
                        $('#validSummary').show();
                }
            });
        //});
    }
</script>
